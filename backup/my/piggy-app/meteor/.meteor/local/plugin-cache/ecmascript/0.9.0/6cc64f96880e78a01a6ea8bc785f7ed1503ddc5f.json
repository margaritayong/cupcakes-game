{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"meteor/mongo","imported":["Mongo"],"specifiers":[{"kind":"named","imported":"Mongo","local":"Mongo"}]},{"source":"meteor/check","imported":["check"],"specifiers":[{"kind":"named","imported":"check","local":"check"}]}],"exports":{"exported":["Goal"],"specifiers":[{"kind":"local","local":"Goal","exported":"Goal"}]}}},"options":{"filename":"imports/api/goal.js","filenameRelative":"imports/api/goal.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/api/goal.js.map","sourceFileName":"imports/api/goal.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"goal"},"ignored":false,"code":"module.export({\n  Goal: function () {\n    return Goal;\n  }\n});\nvar Mongo = void 0;\nmodule.watch(require(\"meteor/mongo\"), {\n  Mongo: function (v) {\n    Mongo = v;\n  }\n}, 0);\nvar check = void 0;\nmodule.watch(require(\"meteor/check\"), {\n  check: function (v) {\n    check = v;\n  }\n}, 1);\nvar Goal = new Mongo.Collection('goal');\n\nif (Meteor.isServer) {\n  // This code only runs on the server\n  Meteor.publish('goal', function () {\n    function goalPublication() {\n      return Goal.find({});\n    }\n\n    return goalPublication;\n  }());\n} // http://docs.meteor.com/api/collections.html#Mongo-Collection-upsert\n\n\nMeteor.methods({\n  'goals.upsert': function (targetGoal) {\n    Goal.upsert({\n      goal: goal\n    }, {\n      $set: {\n        goal: goal,\n        updatedAt: new Date()\n      }\n    });\n  }\n});","map":{"version":3,"sources":["imports/api/goal.js"],"names":["module","export","Goal","Mongo","watch","require","v","check","Collection","Meteor","isServer","publish","goalPublication","find","methods","targetGoal","upsert","goal","$set","updatedAt","Date"],"mappings":"AAAAA,OAAOC,MAAP,CAAc;AAACC,QAAK;AAAA,WAAIA,IAAJ;AAAA;AAAN,CAAd;AAA+B,IAAIC,cAAJ;AAAUH,OAAOI,KAAP,CAAaC,QAAQ,cAAR,CAAb,EAAqC;AAACF,OAAD,YAAOG,CAAP,EAAS;AAACH,YAAMG,CAAN;AAAQ;AAAlB,CAArC,EAAyD,CAAzD;AAA4D,IAAIC,cAAJ;AAAUP,OAAOI,KAAP,CAAaC,QAAQ,cAAR,CAAb,EAAqC;AAACE,OAAD,YAAOD,CAAP,EAAS;AAACC,YAAMD,CAAN;AAAQ;AAAlB,CAArC,EAAyD,CAAzD;AACxG,IAAMJ,OAAO,IAAIC,MAAMK,UAAV,CAAqB,MAArB,CAAb;;AAIP,IAAIC,OAAOC,QAAX,EAAqB;AACnB;AACAD,SAAOE,OAAP,CAAe,MAAf;AAAuB,aAASC,eAAT,GAA2B;AAChD,aAAOV,KAAKW,IAAL,CAAU,EAAV,CAAP;AACD;;AAFD,WAAgCD,eAAhC;AAAA;AAGD,C,CAED;;;AACAH,OAAOK,OAAP,CAAe;AACb,gBADa,YACEC,UADF,EACc;AAEzBb,SAAKc,MAAL,CAAY;AACVC,YAAMA;AADI,KAAZ,EAGA;AACEC,YAAM;AACJD,cAAMA,IADF;AAEJE,mBAAW,IAAIC,IAAJ;AAFP;AADR,KAHA;AASD;AAZY,CAAf","file":"imports/api/goal.js.map","sourcesContent":["import { Mongo } from 'meteor/mongo';\nexport const Goal = new Mongo.Collection('goal');\nimport { check } from 'meteor/check';\n\n\nif (Meteor.isServer) {\n  // This code only runs on the server\n  Meteor.publish('goal', function goalPublication() {\n    return Goal.find({});\n  });\n}\n\n// http://docs.meteor.com/api/collections.html#Mongo-Collection-upsert\nMeteor.methods({\n  'goals.upsert'(targetGoal) {\n\n    Goal.upsert({\n      goal: goal\n    },\n    {\n      $set: {\n        goal: goal,\n        updatedAt: new Date(),\n      }\n    });\n  }\n})"]},"hash":"6cc64f96880e78a01a6ea8bc785f7ed1503ddc5f"}
