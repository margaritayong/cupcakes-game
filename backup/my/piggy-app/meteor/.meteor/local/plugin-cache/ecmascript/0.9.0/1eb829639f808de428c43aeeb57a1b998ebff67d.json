{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"meteor/mongo","imported":["Mongo"],"specifiers":[{"kind":"named","imported":"Mongo","local":"Mongo"}]},{"source":"meteor/check","imported":["check"],"specifiers":[{"kind":"named","imported":"check","local":"check"}]}],"exports":{"exported":["Coders"],"specifiers":[{"kind":"local","local":"Coders","exported":"Coders"}]}}},"options":{"filename":"imports/api/goal.js","filenameRelative":"imports/api/goal.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"useNativeAsyncAwait":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/api/goal.js.map","sourceFileName":"imports/api/goal.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"goal"},"ignored":false,"code":"module.export({\n  Coders: () => Coders\n});\nlet Mongo;\nmodule.watch(require(\"meteor/mongo\"), {\n  Mongo(v) {\n    Mongo = v;\n  }\n\n}, 0);\nlet check;\nmodule.watch(require(\"meteor/check\"), {\n  check(v) {\n    check = v;\n  }\n\n}, 1);\nconst Coders = new Mongo.Collection('coders');\n\nif (Meteor.isServer) {\n  // This code only runs on the server\n  Meteor.publish('coders', function codersPublication() {\n    return Coders.find({});\n  });\n} // http://docs.meteor.com/api/collections.html#Mongo-Collection-upsert\n\n\nMeteor.methods({\n  'coders.upsert'(name) {\n    Coders.upsert({\n      name: name\n    }, {\n      $set: {\n        name: name,\n        updatedAt: new Date()\n      }\n    });\n  }\n\n});","map":{"version":3,"sources":["imports/api/goal.js"],"names":["module","export","Coders","Mongo","watch","require","v","check","Collection","Meteor","isServer","publish","codersPublication","find","methods","name","upsert","$set","updatedAt","Date"],"mappings":"AAAAA,OAAOC,MAAP,CAAc;AAACC,UAAO,MAAIA;AAAZ,CAAd;AAAmC,IAAIC,KAAJ;AAAUH,OAAOI,KAAP,CAAaC,QAAQ,cAAR,CAAb,EAAqC;AAACF,QAAMG,CAAN,EAAQ;AAACH,YAAMG,CAAN;AAAQ;;AAAlB,CAArC,EAAyD,CAAzD;AAA4D,IAAIC,KAAJ;AAAUP,OAAOI,KAAP,CAAaC,QAAQ,cAAR,CAAb,EAAqC;AAACE,QAAMD,CAAN,EAAQ;AAACC,YAAMD,CAAN;AAAQ;;AAAlB,CAArC,EAAyD,CAAzD;AAC5G,MAAMJ,SAAS,IAAIC,MAAMK,UAAV,CAAqB,QAArB,CAAf;;AAIP,IAAIC,OAAOC,QAAX,EAAqB;AACnB;AACAD,SAAOE,OAAP,CAAe,QAAf,EAAyB,SAASC,iBAAT,GAA6B;AACpD,WAAOV,OAAOW,IAAP,CAAY,EAAZ,CAAP;AACD,GAFD;AAGD,C,CAED;;;AACAJ,OAAOK,OAAP,CAAe;AACb,kBAAgBC,IAAhB,EAAsB;AAEpBb,WAAOc,MAAP,CAAc;AACZD,YAAMA;AADM,KAAd,EAGA;AACEE,YAAM;AACJF,cAAMA,IADF;AAEJG,mBAAW,IAAIC,IAAJ;AAFP;AADR,KAHA;AASD;;AAZY,CAAf","file":"imports/api/goal.js.map","sourcesContent":["import { Mongo } from 'meteor/mongo';\nexport const Coders = new Mongo.Collection('coders');\nimport { check } from 'meteor/check';\n\n\nif (Meteor.isServer) {\n  // This code only runs on the server\n  Meteor.publish('coders', function codersPublication() {\n    return Coders.find({});\n  });\n}\n\n// http://docs.meteor.com/api/collections.html#Mongo-Collection-upsert\nMeteor.methods({\n  'coders.upsert'(name) {\n\n    Coders.upsert({\n      name: name\n    },\n    {\n      $set: {\n        name: name,\n        updatedAt: new Date(),\n      }\n    });\n  }\n})"]},"hash":"1eb829639f808de428c43aeeb57a1b998ebff67d"}
